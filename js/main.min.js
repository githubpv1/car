// jQuery(document).ready(function ($) {




// ==== rezet focus ====

function setFocus() {
	var button = document.querySelectorAll('a, button, label, input');

	var isMouseDown = false;

	for (var i = 0; i < button.length; i++) {
		var el = button[i];

		if (el.tagName !== 'LABEL') {
			el.classList.add('focus');
		}

		el.addEventListener('mousedown', function () {
			this.classList.remove('focus');
			isMouseDown = true;
		});
		el.addEventListener('keydown', function (e) {
			if (e.key === "Tab") {
				isMouseDown = false;
			}
		});
		el.addEventListener('focus', function () {
			if (isMouseDown) {
				this.classList.remove('focus');
			}
		});
		el.addEventListener('blur', function () {
			this.classList.add('focus');
		});
	}
}
setFocus();




// ===== equal columns =====

(function () {
	var column = document.querySelectorAll('[data-column]');
	var mySet = new Set();

	column.forEach(function (el) {
		mySet.add(el.getAttribute('data-column'));
	});

	mySet.forEach(function (el, i) {
		var maxHeight = 0;
		var elems = document.querySelectorAll('[data-column="' + i + '"]');

		elems.forEach(function (el) {
			if (el.clientHeight > maxHeight) {
				maxHeight = el.clientHeight;
			}
		});
		elems.forEach(function (el) {
			el.style.height = maxHeight + 'px';
		});
	});
}());




/**************** 
		navigation 
****************/


// ===== scroll up show btn =====

(function () {
	var btnUp = document.querySelector('[data-up]');

	function scrollUp() {
		window.scrollBy(0, -80);

		if (window.pageYOffset > 0) {
			requestAnimationFrame(scrollUp);
		}
	}

	var lastScrollPos = 0;
	var start = true;

	function showBtnUp() {
		if (start) {
			start = false;

			setTimeout(function () {
				var scrollPos = window.pageYOffset;

				if (scrollPos > 600 && scrollPos < lastScrollPos) {
					btnUp.classList.add('show');
				} else {
					btnUp.classList.remove('show');
				}
				lastScrollPos = scrollPos;
				start = true;
			}, 200);
		}
	}

	if (btnUp) {
		btnUp.addEventListener('click', scrollUp);
		document.addEventListener('scroll', showBtnUp);
	}
}());





// ===== smooth scroll to anchors =====

(function () {

	var linkNav = document.querySelectorAll('a[href^="#"]');
	if (linkNav) {

		var V = 0.3;

		for (var i = 0; i < linkNav.length; i++) {
			linkNav[i].addEventListener('click', function (e) {
				e.preventDefault();
				var w = window.pageYOffset,
					hash = this.href.replace(/[^#]*(.*)/, '$1'),
					t = document.querySelector(hash).getBoundingClientRect().top,
					start = null;
				requestAnimationFrame(step);

				function step(time) {
					if (start === null) start = time;
					var progress = time - start,
						r = (t < 0 ? Math.max(w - progress / V, w + t) : Math.min(w + progress / V, w + t));
					window.scrollTo(0, r);
					if (r != w + t) {
						requestAnimationFrame(step);
					} else {
						location.hash = hash;
					}
				}
			}, false);
		}
	}
}());



/**************** 
			slider 
****************/



// review__slider

$('.review__slider').on('init reInit afterChange', getSlide);

function getSlide(event, slick, currentSlide) {

	var i = (currentSlide ? currentSlide : 0) + 1;
	if (i < 10) { i = '0' + i; }
	var all = slick.slideCount;
	// if (all < 10) { all = '0' + all; }

	$('.paging').html('<span class="paging__current">' + i + '</span>' + ' / ' + '<span class="paging__all">' + all + '</span>');
}


$('.review__slider').slick({
	prevArrow: $('.review__prev'),
	nextArrow: $('.review__next'),
	infinite: false,
});



// report__slider

$('.report__slider').on('init reInit afterChange', getHeight);

function getHeight() {
	var elem = document.querySelector('.report__wrap-slider');
	if (elem) {
		elem.style.minHeight = elem.scrollHeight + 'px';
	}
}


$('.report__slider').slick({
	prevArrow: $('.report__prev'),
	nextArrow: $('.report__next'),
	// arrows: false,
	// dots: true,
	// infinite: false,
	slidesToShow: 1,
	slidesToScroll: 1,
	// adaptiveHeight: true,
	mobileFirst: true,
	responsive: [
		{
			breakpoint: 767,
			settings: {
				slidesToShow: 3,
				centerMode: true,
				centerPadding: '100px',
			}
		},
		{
			breakpoint: 1023,
			settings: {
				slidesToShow: 3,
				centerMode: true,
				centerPadding: '260px',
				// variableWidth: true, 
			}
		},
	]
});




// ===== spoiler jQuery  =====

(function () {
	var $allBtn = $('[data-spoiler] [data-btn]');
	$allBtn.filter('.active').next().slideDown(0);

	$allBtn.click(function () {
		var $parent = $(this).closest('[data-spoiler]');
		var $attr = $parent.attr('data-spoiler');
		var $btn = $parent.find('[data-btn]');

		if ($attr === 'toggle') {
			$btn.not($(this)).removeClass('active').attr('aria-expanded', false);
			$btn.not($(this)).parent().removeClass('active').attr('aria-expanded', false);
			$btn.next().not($(this).next()).slideUp(500);

			$(this).toggleClass('active').next().slideToggle(500);
			$(this).parent().toggleClass('active');
			toggleAttr.call($(this));

		} else if ($attr === 'one') {
			$btn.not($(this)).removeClass('active').attr('aria-expanded', false);
			$btn.next().not($(this).next()).slideUp(500);
			$(this).addClass('active').attr('aria-expanded', true).next().slideDown(500);

		} else { // multiple
			$(this).toggleClass('active').next().slideToggle(500);
			$(this).parent().toggleClass('active');
			toggleAttr.call($(this));
		}
	});

	function toggleAttr() {
		if ($(this).attr('aria-expanded') === 'true') {
			$(this).attr('aria-expanded', 'false');
		} else {
			$(this).attr('aria-expanded', 'true');
		}
	}
}());





/****************
		animation
****************/

// === smooth scrolling ===

const lenis = new Lenis({
	// duration: 2.0,
})

function raf(time) {
	lenis.raf(time);
	requestAnimationFrame(raf);
}

requestAnimationFrame(raf);



// ===== animation on scroll transition ===== 

// <div class="title-2" data-aos="fade-left" ></div>

(function () {
	var targets = document.querySelectorAll('[data-aos]');

	var options = {
		threshold: 0.1,
		rootMargin: '0px 0px -50px 0px',
	}

	// 1 - один раз

	var callback = function (entries, observer) {
		entries.forEach(function (entry) {

			if (entry.isIntersecting) {
				entry.target.classList.add('aos-animate');
				observer.unobserve(entry.target);
			}
		});
	}

	// 2  - при прокрутке блока ниже окна - анимация повторится

	var callback2 = function (entries, observer) {
		entries.forEach(function (entry) {

			if (entry.isIntersecting) {
				var scrollIn = window.pageYOffset;
				entry.target.setAttribute('data-in', scrollIn);
				entry.target.classList.add('aos-animate');

			} else {
				var scrollOut = window.pageYOffset;
				if (entry.target.getAttribute('data-in') > scrollOut) {
					entry.target.classList.remove('aos-animate');
				}
			}
		});
	}

	// 3  - при прокрутке блока выше и ниже окна анимация повторится

	var callback3 = function (entries, observer) {
		console.log(entries);
		entries.forEach(function (entry) {

			if (entry.isIntersecting) {
				entry.target.classList.add('animated');

			} else {
				entry.target.classList.remove('animated');
			}
		});
	}

	var observer = new IntersectionObserver(callback, options);

	if (targets) {
		targets.forEach(function (target) {
			observer.observe(target);
		});
	}
}());



// $('.parallax-window').parallax({
//   naturalWidth: 600,
//   naturalHeight: 400
// });


// ===== parallax pixelcog =====

// $('.parallax-window').parallax({
//   speed: 0.2,
// });





// });
